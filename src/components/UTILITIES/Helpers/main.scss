/*
    Styles du composant [helpers] de SipaUI
*/
@import "variables";

/* -- CLEARFIX -------------------------------------------------------------------- */
.su-clearfix,
.su-cf {
    @include clearfix();
}

/* -- HIDE -------------------------------------------------------------------- */
.su-hidden {
    display: none !important;
    visibility: hidden; // Les lecteurs d'écrans parfois ne prennent pas en compte le display none
}

// Pour cacher quelque-chose qui doit rester accessible aux lecteurs d'écrans
.su-visually-hidden { // https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
    position: absolute !important;
    clip: rect(1px, 1px, 1px, 1px);
    padding: 0 !important;
    border: 0 !important;
    height: 1px !important;
    width: 1px !important;
    overflow: hidden;
}
body:hover .su-visually-hidden {
    a,
    input,
    button {
        display: none !important;
    }
}

// Gestion de la visibilité en fonction des breakpoints
@media (max-width: $max-breakpoint-xs) {
    @include responsive-invisibility('.su-hidden-xs');
}
@media (min-width: $min-breakpoint-sm) and (max-width: $max-breakpoint-sm) {
    @include responsive-invisibility('.su-hidden-sm');
}

@media (min-width: $min-breakpoint-md) and (max-width: $max-breakpoint-md) {
    @include responsive-invisibility('.su-hidden-md');
}

@media (min-width: $min-breakpoint-lg) and (max-width: $max-breakpoint-lg) {
    @include responsive-invisibility('.su-hidden-lg');
}
@media (min-width: $min-breakpoint-xl) {
    @include responsive-invisibility('.su-hidden-xl');

}

@include responsive-invisibility('.su-visible-xs');
@include responsive-invisibility('.su-visible-sm');
@include responsive-invisibility('.su-visible-md');
@include responsive-invisibility('.su-visible-lg');
@include responsive-invisibility('.su-visible-xl');

@include responsive-invisibility('.su-visible-inline-block-xs');
@include responsive-invisibility('.su-visible-inline-block-sm');
@include responsive-invisibility('.su-visible-inline-block-md');
@include responsive-invisibility('.su-visible-inline-block-lg');
@include responsive-invisibility('.su-visible-inline-block-xl');

@media (max-width: $max-breakpoint-xs) {
    @include responsive-visibility('.su-visible-xs');
    @include responsive-visibility('.su-visible-inline-block-xs', inline-block);
    @include responsive-visibility('.su-visible-table-cell-xs', table-cell);
}
@media (min-width: $min-breakpoint-sm) and (max-width: $max-breakpoint-sm) {
    @include responsive-visibility('.su-visible-sm');
    @include responsive-visibility('.su-visible-inline-block-sm', inline-block);
    @include responsive-visibility('.su-visible-table-cell-sm', table-cell);
}
@media (min-width: $min-breakpoint-md) and (max-width: $max-breakpoint-md) {
    @include responsive-visibility('.su-visible-md');
    @include responsive-visibility('.su-visible-inline-block-md', inline-block);
    @include responsive-visibility('.su-visible-table-cell-md', table-cell);
}
@media (min-width: $min-breakpoint-lg) and (max-width: $max-breakpoint-lg) {
    @include responsive-visibility('.su-visible-lg');
    @include responsive-visibility('.su-visible-inline-block-lg', inline-block);
    @include responsive-visibility('.su-visible-table-cell-lg', table-cell);
}
@media (min-width: $min-breakpoint-xl) {
    @include responsive-visibility('.su-visible-xl');
    @include responsive-visibility('.su-visible-inline-block-xl', inline-block);
    @include responsive-visibility('.su-visible-table-cell-xl', table-cell);
}



/* -- DISPLAY -------------------------------------------------------------------- */
.su-block {
    display: block !important;
}
.su-inline-block {
    display: inline-block !important;
}

/* -- POSITIONS -------------------------------------------------------------------- */
.su-relative {
	position: relative !important;
}
.su-absolute {
	position: absolute !important;
}
.su-fixed {
	position: fixed !important;
}

/* -- ALIGNMENT -------------------------------------------------------------------- */
.su-block-center {
    display: block !important; //utile pour forcer le centrage d’un objet non block comme les SVG
    margin-left: auto !important;
    margin-right: auto !important;
}
.su-text-left {
    text-align: left !important;
}
.su-text-right {
    text-align: right !important;
}
.su-text-center {
    text-align: center !important;
}
.su-text-justify {
    text-align: justify !important;
    word-wrap: break-word;
    -webkit-hyphens: auto;
    -moz-hyphens:    auto;
    -ms-hyphens:     auto;
    hyphens:         auto;
}

/* -- FULL WIDTH -------------------------------------------------------------------- */
.su-fullwidth {
    width: 100% !important;
}


//
/* -- MOBILE ONLY ---------------------------------------------------------------------------------------------------------------------------------- */
//

@media only screen and (max-width: $max-breakpoint-sm) {
    .su-fullwidth-mobile {
        width: 100% !important;
    }
}

/* -- DISABLED -------------------------------------------------------------------- */
[disabled="disabled"],
.su-disabled {
    opacity: $opacity-disabled;
    cursor: default !important;
}
