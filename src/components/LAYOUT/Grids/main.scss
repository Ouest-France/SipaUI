/*
    Styles du composant [grids] de SipaUI
*/
@import "variables";

// CONTENEUR------------------------------------------------------------------------------------------/
.sipaui .su-container,
.sipaui.su-container {
    width: 100%;
    padding: 0 20px;
}


@media screen and (min-width: $min-breakpoint-sm) {
    .sipaui .su-container,
    .sipaui.su-container {
        padding: 0 30px;
    }
}

@media screen and (min-width: $min-breakpoint-md) {
    .sipaui .su-container,
    .sipaui.su-container {
        max-width: $min-breakpoint-md;
        margin: 0 auto;
        padding: 0 30px;
    }
}

@media screen and (min-width: $min-breakpoint-lg) {
    .sipaui .su-container,
    .sipaui.su-container {
        max-width: 960px;
        padding: 0 10px;
    }
}

@media screen and (min-width: $min-breakpoint-xl) {
    .sipaui .su-container,
    .sipaui.su-container {
        max-width: 1280px;
    }
}


// GRILLE------------------------------------------------------------------------------------------/
.sipaui .su-row,
.sipaui.su-row {
    @include display-flex();
    @include justify-content(space-between, justify);
    @include flex-wrap(wrap);

    @include grid-col-definition(xs, $grid-small-max-col);

    @include grid-offset-definition(xs, $grid-small-max-col);

    @include grid-filling-definition(xs, $grid-small-max-col);

    // Grille auto
    &.su-grid-auto {
        @include flex-wrap(nowrap);

        &.su-wrap {
            @include flex-wrap(wrap);
            @include justify-content(flex-start, start);

            .su-col {
                @include flex(0 0 auto);
            }
        }
        .su-col {
            @include flex(1 1 auto);
        }
        &.su-has-gutter {
            .su-col {
                margin-right: $grid-gutter;
            }
            .su-col:last-child {
                margin-right: 0;
            }
        }
        &.su-row-left {
            @include justify-content(flex-start, start);
        }
        &.su-row-right {
            @include justify-content(flex-end, end);
        }
        &.su-row-center {
            @include justify-content(center, center);
        }
        &.su-row-left,
        &.su-row-right,
        &.su-row-center {
            .su-col {
                @include flex(0 0 auto);
            }
        }
    }

    // Alignement vertical
    &.su-vertical-start {
        @include align-items(flex-start);
    }
    &.su-vertical-center {
        @include align-items(center);
    }
    &.su-vertical-end {
        @include align-items(flex-end);
    }

    [class*="su-col-"] {
        @include flex(1 1 100%);
    }
}


@media screen and (min-width: $min-breakpoint-sm) {
    .sipaui .su-row,
    .sipaui.su-row {
        @include grid-col-definition(sm, $grid-small-max-col);
        @include grid-offset-definition(sm, $grid-small-max-col);
        @include grid-filling-definition(sm, $grid-small-max-col);
    }
}

@media screen and (min-width: $min-breakpoint-md) {
    .sipaui .su-row,
    .sipaui.su-row {
        @include grid-col-definition(md, $grid-large-max-col);
        @include grid-offset-definition(md, $grid-large-max-col);
        @include grid-filling-definition(md, $grid-large-max-col);
    }
}

@media screen and (min-width: $min-breakpoint-lg) {
    .sipaui .su-row,
    .sipaui.su-row {
        @include grid-col-definition(lg, $grid-large-max-col);
        @include grid-offset-definition(lg, $grid-large-max-col);
        @include grid-filling-definition(lg, $grid-large-max-col);
    }
}

@media screen and (min-width: $min-breakpoint-xl) {
    .sipaui .su-row,
    .sipaui.su-row {
        @include grid-col-definition(xl, $grid-large-max-col);
        @include grid-offset-definition(xl, $grid-large-max-col);
        @include grid-filling-definition(xl, $grid-large-max-col);
    }
}
