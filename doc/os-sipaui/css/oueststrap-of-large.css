/* 480px */
/* 768px */
/* 980px */
/* 1280px */
/* 479px */
/* 767px */
/* 979px */
/* 1279px */
.bottom-menu.fixed .bottom-nav-menu,
.bottom-menu .bottom-nav-menu {
  margin: 0 2.9rem; }
  .bottom-menu.fixed .bottom-nav-menu .item > a,
  .bottom-menu .bottom-nav-menu .item > a {
    padding: 0 2.9rem; }
  .bottom-menu.fixed .bottom-nav-menu .item .btn-abonnement,
  .bottom-menu .bottom-nav-menu .item .btn-abonnement {
    padding: 0 2rem; }
  .bottom-menu.fixed .bottom-nav-menu .sousmenu .container-of,
  .bottom-menu .bottom-nav-menu .sousmenu .container-of {
    padding-left: 10rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3Vlc3RzdHJhcC1vZi1sYXJnZS5jc3MiLCJzb3VyY2VzIjpbIm91ZXN0c3RyYXAtb2YtbGFyZ2Uuc2NzcyIsIl9vcy1sYXJnZS5zY3NzIiwiX3ZhcmlhYmxlcy5zY3NzIiwiX21peGlucy5zY3NzIiwibGF5b3V0L19kZXNrdG9wX3dpZGUuc2NzcyIsImhlYWRlci9iYXJyZV9ib3R0b20vX2Rlc2t0b3Bfd2lkZS5zY3NzIiwiaGVhZGVyL2JhcnJlX2JvdHRvbS9fdmFyaWFibGVzLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnX29zLWxhcmdlJztcblxuQGltcG9ydCAnaGVhZGVyL2JhcnJlX2JvdHRvbS9kZXNrdG9wX3dpZGUnOyIsIi8vIFZhcnNcbkBpbXBvcnQgJ3ZhcmlhYmxlcyc7XG5AaW1wb3J0ICdtaXhpbnMnO1xuXG5AaW1wb3J0ICdsYXlvdXQvZGVza3RvcF93aWRlJztcbiIsIi8vIFZhcmlhYmxlc1xuLy9cblxuLy8gdm9pciBodHRwczovL3JvYm90cy50aG91Z2h0Ym90LmNvbS9zYXNzLWRlZmF1bHQgcG91ciBleHBsaWNhdGlvbnMgc3VyICFkZWZhdWx0XG5cbiR1cmxEb3NzaWVyRm9udDogXHRcdFx0Jy4uL2ZvbnRzJyAhZGVmYXVsdDtcblxuLy8gQ09VTEVVUlMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBOVUFOQ0lFUiBPVUVTVC1GUkFOQ0VcbiRibGFuYzogICAgICAgICAgICAgICAgICAgICAjZmZmICAgICFkZWZhdWx0O1xuJGdyaXMtdHJlcy1jbGFpcjpcdFx0XHQjZWZlZmVmICFkZWZhdWx0O1xuJGdyaXMtcGx1cy1jbGFpcjogICAgICAgICAgICNkNGQ0ZDQgIWRlZmF1bHQ7XG4kZ3Jpcy1jbGFpcjogICAgICAgICAgICAgICAgI2MxYmZjMCAhZGVmYXVsdDtcbiRncmlzOiAgICAgICAgICAgICAgICAgICAgICAjODc4Nzg3ICFkZWZhdWx0O1xuJGdyaXMtZm9uY2U6ICAgICAgICAgICAgICAgICM2NjYgICAgIWRlZmF1bHQ7XG4kZ3Jpcy1wbHVzLWZvbmNlOiAgICAgICAgICAgIzMzMyAgICAhZGVmYXVsdDtcbiRub2lyOiAgICAgICAgICAgICAgICAgICAgICAjMDAwICAgICFkZWZhdWx0O1xuXG4kZ3JpczAyOiAgICAgICAgICAgI2MxYmZjMCAhZGVmYXVsdDtcbiRncmlzMDItZm9uY2U6ICAgICAjOTk5NTk2ICFkZWZhdWx0O1xuJGdyaXMwMi1wbHVzLWZvbmNlOiM2ZTY4NjggIWRlZmF1bHQ7XG5cbiRyb3VnZTogICAgICAgICAgICAgICAgICAgICAjZTIwMDFhICFkZWZhdWx0O1xuJHJvdWdlLWZvbmNlOiAgICAgICAgICAgICAgICNiNDAwMTUgIWRlZmF1bHQ7XG4kcm91Z2UtcGx1cy1mb25jZTogICAgICAgICAgIzhjMDAxMCAhZGVmYXVsdDtcblxuJGphdW5lOiAgICAgICAgICAgICAgICAgICAgICNmYzMgICAgIWRlZmF1bHQ7XG4kamF1bmUtZm9uY2U6ICAgICAgICAgICAgICAgI2U3YWYwNyAhZGVmYXVsdDtcbiRqYXVuZS1wbHVzLWZvbmNlOiAgICAgICAgICAjYjI4NjAwICFkZWZhdWx0O1xuXG4kamF1bmUwMjogICAgICAgICAgICAgICAgICAgI2RiYTUwNCAhZGVmYXVsdDtcbiRqYXVuZTAyLWZvbmNlOiAgICAgICAgICAgICAjYzI5NDBjICFkZWZhdWx0O1xuXG4kYmxldS1jbGFpcjogICAgICAgICAgICAgICAgIzNiOTlmYyAhZGVmYXVsdDtcbiRibGV1OiAgICAgICAgICAgICAgICAgICAgICAjMDA0ODY0ICFkZWZhdWx0O1xuJGJsZXUtZm9uY2U6ICAgICAgICAgICAgICAgICMwMDM0NDggIWRlZmF1bHQ7XG4kYmxldS1wbHVzLWZvbmNlOiAgICAgICAgICAgIzAwMUEyMyAhZGVmYXVsdDtcblxuJHZlcm1pbGxvbjogICAgICAgICAgICAgICAgICNGNzQ0MEIgIWRlZmF1bHQ7XG4kdmVybWlsbG9uLWZvbmNlOiAgICAgICAgICAgI0MxMkYwMSAhZGVmYXVsdDtcbiR2ZXJtaWxsb24tcGx1cy1mb25jZTogICAgICAjOTgyNTAwICFkZWZhdWx0O1xuXG4kdmVydDogICAgICAgICAgICAgICAgICAgICAgIzg3QTYyQyAhZGVmYXVsdDtcbiR2ZXJ0LWZvbmNlOiAgICAgICAgICAgICAgICAjNjc4NTExICFkZWZhdWx0O1xuJHZlcnQtcGx1cy1mb25jZTogICAgICAgICAgICM0NDVDMDAgIWRlZmF1bHQ7XG5cbiR0dXJxdW9pc2U6ICAgICAgICAgICAgICAgICAjMTI3MTczICFkZWZhdWx0O1xuJHR1cnF1b2lzZS1mb25jZTogICAgICAgICAgICMwMDQ2NDYgIWRlZmF1bHQ7XG4kdHVycXVvaXNlLXBsdXMtZm9uY2U6ICAgICAgIzAwMkEyQSAhZGVmYXVsdDtcblxuJHR1cnF1b2lzZUZvcm1hdGlvbjogICAgICAgICAgICAgICAgICMwMWFkYzUgIWRlZmF1bHQ7XG5cblxuLy8gQVBQTElDQVRJT04gREVTIENPVUxFVVJTIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBVTklWRVJTIE9VRVNULUZSQU5DRVxuJGJvZHktYmc6ICAgICRibGFuYyAhZGVmYXVsdDtcbiRib2R5LWNvbG9yOiAkZ3Jpcy1wbHVzLWZvbmNlICFkZWZhdWx0O1xuXG4kYWN0dS0xOiAkcm91Z2UgICAgICAgICAgICAgIWRlZmF1bHQ7XG4kYWN0dS0yOiAkcm91Z2UtZm9uY2UgICAgICAgIWRlZmF1bHQ7XG4kYWN0dS0zOiAkcm91Z2UtcGx1cy1mb25jZSAgIWRlZmF1bHQ7XG5cbiRsb2lzaXItMTogJHZlcm1pbGxvbiAgICAgICAgICAgICFkZWZhdWx0O1xuJGxvaXNpci0yOiAkdmVybWlsbG9uLWZvbmNlICAgICAgIWRlZmF1bHQ7XG4kbG9pc2lyLTM6ICR2ZXJtaWxsb24tcGx1cy1mb25jZSAhZGVmYXVsdDtcblxuJGVudHJlcHJpc2UtMTogJGJsZXUgICAgICAgICAgICAhZGVmYXVsdDtcbiRlbnRyZXByaXNlLTI6ICRibGV1LWZvbmNlICAgICAgIWRlZmF1bHQ7XG4kZW50cmVwcmlzZS0zOiAkYmxldS1wbHVzLWZvbmNlICFkZWZhdWx0O1xuXG4kc3BvcnQtMTogJHZlcnQgICAgICAgICAgICAgICAgICFkZWZhdWx0O1xuJHNwb3J0LTI6ICR2ZXJ0LWZvbmNlICAgICAgICAgICAhZGVmYXVsdDtcbiRzcG9ydC0zOiAkdmVydC1wbHVzLWZvbmNlICAgICAgIWRlZmF1bHQ7XG5cbiRhYm8tMTogJGphdW5lICAgICAgICAgICAgICAhZGVmYXVsdDtcbiRhYm8tMjogJGphdW5lLWZvbmNlICAgICAgICAhZGVmYXVsdDtcbiRhYm8tMzogJGphdW5lLXBsdXMtZm9uY2UgICAhZGVmYXVsdDtcblxuJGV0dWRpYW50cy0xOiAkdHVycXVvaXNlICAgICAgICAgICAgIWRlZmF1bHQ7XG4kZXR1ZGlhbnRzLTI6ICR0dXJxdW9pc2UtZm9uY2UgICAgICAhZGVmYXVsdDtcbiRldHVkaWFudHMtMzogJHR1cnF1b2lzZS1wbHVzLWZvbmNlICFkZWZhdWx0O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhbm5leGVzLTE6ICRncmlzMDIgIWRlZmF1bHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhbm5leGVzLTI6ICRncmlzMDItZm9uY2UgIWRlZmF1bHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhbm5leGVzLTM6ICRncmlzMDItcGx1cy1mb25jZSAhZGVmYXVsdDtcblxuJHNlcnZpY2VzLTE6ICRncmlzMDIgIWRlZmF1bHQ7XG4kc2VydmljZXMtMjogJGdyaXMwMi1mb25jZSAhZGVmYXVsdDtcbiRzZXJ2aWNlcy0zOiAkZ3JpczAyLXBsdXMtZm9uY2UgIWRlZmF1bHQ7XG5cbiRmb3JtYXRpb24tMTogJHR1cnF1b2lzZUZvcm1hdGlvbiAgICAgICAgICAgICFkZWZhdWx0O1xuXG4kcHJlbWl1bS0xOiAgICRqYXVuZTAyICFkZWZhdWx0O1xuJHByZW1pdW0tMjogICAkamF1bmUwMi1mb25jZSAhZGVmYXVsdDtcblxuJGZhY2Vib29rOiAjM2I1OTk4ICFkZWZhdWx0O1xuJHR3aXR0ZXI6ICM1NWFjZWUgIWRlZmF1bHQ7XG4kbGlua2VkaW46ICMwZTc2YTggIWRlZmF1bHQ7XG4kZ29vZ2xlOiAjZGQ0ODM5ICFkZWZhdWx0O1xuJGZsdXhyc3M6ICNmMDgwMWEgIWRlZmF1bHQ7XG4kc25hcGNoYXQ6ICNmZmZjMDAgIWRlZmF1bHQ7XG4kdmlhZGVvOiAjZWM3NTAwIWRlZmF1bHQ7XG4keW91dHViZTogI2JiMDAwMCFkZWZhdWx0O1xuJGluc3RhZ3JhbTogI2UyMzA3NiFkZWZhdWx0O1xuJHBpbnRlcmVzdDogI2NiMjAyNyFkZWZhdWx0O1xuJHZpbmU6ICMwMGJmOGYhZGVmYXVsdDtcbiR0dW1ibHI6ICMzMjUwNmQhZGVmYXVsdDtcbiRzb3VuZGNsb3VkOiAjRkY2NjAwIWRlZmF1bHQ7XG4kaXR1bmVzOiAjMDAwMDAwIWRlZmF1bHQ7XG4kZmxpY2tyOiAjMDA2M0RDIWRlZmF1bHQ7XG4kZGFpbHltb3Rpb246ICMwMDY2ZGMhZGVmYXVsdDtcblxuJGNvdWxldXItcHJpbmNpcGFsZTogJHJvdWdlIWRlZmF1bHQ7XG4kY291bGV1ci1wcmluY2lwYWxlLTI6ICRyb3VnZS1mb25jZSFkZWZhdWx0O1xuJGNvdWxldXItcHJpbmNpcGFsZS0zOiAkcm91Z2UtcGx1cy1mb25jZSFkZWZhdWx0O1xuJGNvdWxldXItc2Vjb25kYWlyZTogJGdyaXMtZm9uY2UhZGVmYXVsdDtcbiRjb3VsZXVyLXNlY29uZGFpcmUtMjogJGdyaXMtcGx1cy1mb25jZSFkZWZhdWx0O1xuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVFlQTyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRmb250LWZhbWlseS1iYXNlOiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmICFkZWZhdWx0O1xuJGZvbnQtZmFtaWx5LXNlY29uZGFpcmU6ICdPc3dhbGQnLCAkZm9udC1mYW1pbHktYmFzZSAhZGVmYXVsdDtcblxuLy8gVmFsZXVyIGVuIHBpeGVsIHBvdXIgcydhZGFwdGVyIGF1IHJlc3BvbnNpdmUuIEFwcGxpcXXDqSDDoCBsJ8OpbMOpbWVudCA8aHRtbD4uXG4kZm9udC1zaXplLXJvb3Q6IDEwcHggIWRlZmF1bHQ7XG5cbiRmb250LXNpemUteHNtYWxsOiAxLjJyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLXNtYWxsOiAxLjRyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLWJhc2U6IDEuNnJlbSAhZGVmYXVsdDtcbiRmb250LXNpemUtbWVkaXVtOiAxLjhyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLXRhbGw6IDJyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLXh0YWxsOiAzcmVtICFkZWZhdWx0O1xuJGZvbnQtc2l6ZS14eHRhbGw6IDRyZW0gIWRlZmF1bHQ7XG4kbGluZS1oZWlnaHQtYmFzZTogMS41ICFkZWZhdWx0O1xuXG4kZm9udC1zaXplLWgxOiAkZm9udC1zaXplLXh4dGFsbCAhZGVmYXVsdDtcbiRmb250LXNpemUtaDI6ICRmb250LXNpemUteHRhbGwgIWRlZmF1bHQ7XG4kZm9udC1zaXplLWgzOiAkZm9udC1zaXplLXRhbGwgIWRlZmF1bHQ7XG4kZm9udC1zaXplLWg0OiAxLjZyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLWg1OiAxLjVyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLWg2OiAxLjNyZW0gIWRlZmF1bHQ7XG5cbiRzbWFsbGVyLWZvbnQtc2l6ZTogODAlICFkZWZhdWx0O1xuXG5cbi8vIEdSSUxMRSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRlbmFibGUtZmxleDogZmFsc2U7XG4kZW5hYmxlLWdyaWQtY2xhc3NlczogdHJ1ZTtcbiRncmlkLWd1dHRlci13aWR0aC1iYXNlOiAycmVtO1xuJGdyaWQtZ3V0dGVyLXdpZHRoczogKCkgIWRlZmF1bHQ7XG4kY29udGFpbmVyLW1heC13aWR0aHM6IDEwMHJlbTtcblxuJHBhZGRpbmctbWFpbi1tb2JpbGU6IDEuNXJlbTtcbiRncmlkLWJyZWFrcG9pbnRzOiAoXG4gICAgbGc6IDEyOHJlbVxuKSAhZGVmYXVsdDtcblxuXG4vLyBSVVBUVVJFUyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRtaW4tYnJlYWtwb2ludC1tb2JpbGUtd2lkZTogMzBlbTsgIC8qIDQ4MHB4ICovXG4kbWluLWJyZWFrcG9pbnQtdGFibGV0OiA0OGVtOyAgICAgICAvKiA3NjhweCAqL1xuJG1pbi1icmVha3BvaW50LWRlc2t0b3A6IDYxLjI1ZW07ICAgLyogOTgwcHggKi9cbiRtaW4tYnJlYWtwb2ludC1kZXNrdG9wLXdpZGU6IDgwZW07IC8qIDEyODBweCAqL1xuXG4kbWF4LWJyZWFrcG9pbnQtbW9iaWxlLW5hcnJvdzogMjkuOTM4ZW07IC8qIDQ3OXB4ICovXG4kbWF4LWJyZWFrcG9pbnQtbW9iaWxlOiA0Ny45MzhlbTsgICAgICAgIC8qIDc2N3B4ICovXG4kbWF4LWJyZWFrcG9pbnQtdGFibGV0OiA2MS4xODhlbTsgICAgICAgIC8qIDk3OXB4ICovXG4kbWF4LWJyZWFrcG9pbnQtZGVza3RvcDogNzkuOTM4ZW07ICAgICAgIC8qIDEyNzlweCAqL1xuXG5cbi8vIE1BUkdFUyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vbWFyZ2luLWJvdHRvbVxuJG1hcmdpbi1zbWFsbDogMXJlbTtcbiRtYXJnaW4tc3RhbmRhcmQ6IDJyZW07XG4kbWFyZ2luLW1lZGl1bTogMy41cmVtO1xuJG1hcmdpbi1sYXJnZTogNHJlbTtcblxuLy8gT01CUkVTIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuJG9tYnJlLTE6IDAgMCAxMHB4IHJnYmEoMCwwLDAsIC41KTtcblxuXG4vLyBWQVJJQUJMRVMgU1DDiUNJRklRVUVTIEhFQURFUiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vL2hlYWRlclxuJGhlaWdodC1oZWFkZXI6IDZyZW07XG4kd2lkdGgtem9uZS1idXJnZXI6IDZyZW07XG4kd2lkdGgtem9uZS1idXJnZXItbGc6IDcuNXJlbTtcbiR3aWR0aC1tZW51OiAzMnJlbTtcblxuLy8gVkFSSUFCTEVTIE9CSkVUUyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVEVYVEVcbiRjb3VsZXVyLXRleHRlOiAkZ3Jpcy1wbHVzLWZvbmNlO1xuXG4vLyBMSUVOUyBTVEFOREFSRFNcbiRjb3VsZXVyLWxpZW5zOiAkZ3JpcyFkZWZhdWx0O1xuLy8kY291bGV1ci1saWVucy12aXNpdGVkOiA7IGTDqWNsYXLDqSBjb21tZSA9IMOgICRjb3VsZXVyLWxpZW5zIGRhbnMgbGVzIENTU1xuJGNvdWxldXItbGllbnMtaG92ZXI6ICRyb3VnZS1mb25jZSFkZWZhdWx0O1xuLy8gJGNvdWxldXItbGllbnMtYWN0aXZlOiA7IGTDqWNsYXLDqSBjb21tZSA9IMOgICRjb3VsZXVyLWxpZW5zLWhvdmVyIGRhbnMgbGVzIENTU1xuLy8gJGNvdWxldXItbGllbnMtZm9jdXM6IDsgZMOpY2xhcsOpIGNvbW1lID0gw6AgJGNvdWxldXItbGllbnMtaG92ZXIgZGFucyBsZXMgQ1NTXG5cbi8vIExJRU5TIMOJRElUT1JJQVVYXG4kY291bGV1ci1saWVucy1hcnRpY2xlOiAkcm91Z2UhZGVmYXVsdDtcbiRjb3VsZXVyLWxpZW5zLWFydGljbGUtaG92ZXI6ICRjb3VsZXVyLWxpZW5zLWhvdmVyIWRlZmF1bHQ7XG5cbi8vIExJRU5TIE5FVVRSRVNcbiRjb3VsZXVyLWxpZW5zLW5ldXRyZTogJGdyaXMtcGx1cy1mb25jZSFkZWZhdWx0O1xuJGNvdWxldXItbGllbnMtbmV1dHJlLWhvdmVyOiAkY291bGV1ci1saWVucy1ob3ZlciFkZWZhdWx0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY291bGV1ci1saWVucy11bmU6ICRjb3VsZXVyLWxpZW5zLW5ldXRyZSFkZWZhdWx0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY291bGV1ci1saWVucy11bmUtaG92ZXI6ICRjb3VsZXVyLWxpZW5zLW5ldXRyZS1ob3ZlciFkZWZhdWx0O1xuXG5cblxuLy8gRk9STVVMQUlSRVNcbiRncmlzLWZvcm11bGFpcmU6ICAgICAgICAgICAjZjZmN2ZhICFkZWZhdWx0O1xuJGdyaXMtZm9ybXVsYWlyZS1ib3JkdXJlOiAgICRncmlzLXBsdXMtY2xhaXIgIWRlZmF1bHQ7XG4kZm9ybXVsYWlyZS1lcnJldXJzOiBcdFx0I0ZFRUJFRCAhZGVmYXVsdDtcbiRmb3JtdWxhaXJlLWVycmV1cnMtZm9uY2U6IFx0JHJvdWdlICFkZWZhdWx0O1xuXG4vLyBNRVRBIFRBR1NcbiRtZXRhdGFnLXJhZGl1czogICAgICAgICAgICAgICAgMC4zcmVtO1xuJG1ldGF0YWctY29sb3I6ICAgICAgICAgICAgICAgICAkY291bGV1ci1zZWNvbmRhaXJlO1xuJG1ldGF0YWctYm9yZGVyQ29sb3I6ICAgICAgICAgICAkZ3Jpcy1wbHVzLWNsYWlyO1xuJG1ldGF0YWctY29sb3ItaG92ZXI6ICAgICAgICAgICAkY291bGV1ci1wcmluY2lwYWxlLTI7XG4kbWV0YXRhZy1ib3JkZXJDb2xvci1ob3ZlcjogICAgICRtZXRhdGFnLWNvbG9yLWhvdmVyO1xuXG4kbWV0YXRhZ0NvdWxldXItY29sb3I6ICAgICAgICAgICAgICAgICAgJGJsYW5jO1xuJG1ldGF0YWdDb3VsZXVyLWJhY2tncm91bmRDb2xvcjogICAgICAgICRjb3VsZXVyLXByaW5jaXBhbGUtMjtcbiRtZXRhdGFnQ291bGV1ci1ib3JkZXJDb2xvcjogICAgICAgICAgICAkbWV0YXRhZ0NvdWxldXItYmFja2dyb3VuZENvbG9yO1xuJG1ldGF0YWdDb3VsZXVyLWNvbG9yLWhvdmVyOiAgICAgICAgICAgICRtZXRhdGFnQ291bGV1ci1jb2xvcjtcbiRtZXRhdGFnQ291bGV1ci1iYWNrZ3JvdW5kQ29sb3ItaG92ZXI6ICAkY291bGV1ci1wcmluY2lwYWxlLTM7XG4kbWV0YXRhZ0NvdWxldXItYm9yZGVyQ29sb3ItaG92ZXI6ICAgICAgJG1ldGF0YWdDb3VsZXVyLWJhY2tncm91bmRDb2xvci1ob3ZlcjtcblxuJG1ldGF0YWdJbXBvcnRhbnQtY29sb3I6ICAgICAgICAgICAgICAgICAgJGJsYW5jO1xuJG1ldGF0YWdJbXBvcnRhbnQtYmFja2dyb3VuZENvbG9yOiAgICAgICAgJGNvdWxldXItcHJpbmNpcGFsZTtcbiRtZXRhdGFnSW1wb3J0YW50LWJvcmRlckNvbG9yOiAgICAgICAgICAgICRtZXRhdGFnSW1wb3J0YW50LWJhY2tncm91bmRDb2xvcjtcbiRtZXRhdGFnSW1wb3J0YW50LWNvbG9yLWhvdmVyOiAgICAgICAgICAgICAgJG1ldGF0YWdJbXBvcnRhbnQtY29sb3I7XG4kbWV0YXRhZ0ltcG9ydGFudC1iYWNrZ3JvdW5kQ29sb3ItaG92ZXI6ICAkY291bGV1ci1wcmluY2lwYWxlLTI7XG4kbWV0YXRhZ0ltcG9ydGFudC1ib3JkZXJDb2xvci1ob3ZlcjogICAgICAkbWV0YXRhZ0ltcG9ydGFudC1iYWNrZ3JvdW5kQ29sb3ItaG92ZXI7XG4iLCIvL1xuLy8gT3Vlc3QtRnJhbmNlIEJvb3RzdHJhcFxuLy8gZm9uY3Rpb25zIHNhc3MgdXRpbGVzXG4vL1xuQG1peGluIGhvdmVyLWZvY3VzIHtcbiAgICAmOmZvY3VzLFxuICAgICY6YWN0aXZlLFxuICAgICY6aG92ZXIge1xuICAgICAgICBAY29udGVudFxuICAgIH1cbn1cblxuQG1peGluIGNsZWFyZml4KCkge1xuICAgICY6OmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICB9XG59XG5cbi8vIHRyYW5zZm9ybVxuQG1peGluIHRyYW5zZm9ybSgkdHJhbnNmb3Jtcykge1xuICAgIC1tcy10cmFuc2Zvcm06ICR0cmFuc2Zvcm1zO1xuICAgIHRyYW5zZm9ybTogJHRyYW5zZm9ybXM7XG59XG5cbi8vIHRyYW5zaXRpb25cbkBtaXhpbiB0cmFuc2l0aW9uKCR0cmFuc2l0aW9uLi4uKSB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcbiAgICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcbn1cblxuLy8gcm90YXRlXG5AbWl4aW4gcm90YXRlICgkZGVnKSB7XG4gICAgQGluY2x1ZGUgdHJhbnNmb3JtKHJvdGF0ZSgjeyRkZWd9ZGVnKSk7XG59XG5cbi8vIGtleWZyYW1lc1xuQG1peGluIGtleWZyYW1lcygkbmFtZSkge1xuICBALXdlYmtpdC1rZXlmcmFtZXMgI3skbmFtZX0ge1xuICAgIEBjb250ZW50O1xuICB9XG4gIEAtbW96LWtleWZyYW1lcyAjeyRuYW1lfSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbiAgQC1tcy1rZXlmcmFtZXMgI3skbmFtZX0ge1xuICAgIEBjb250ZW50O1xuICB9XG4gIEBrZXlmcmFtZXMgI3skbmFtZX0ge1xuICAgIEBjb250ZW50O1xuICB9XG59XG4vL2FuaW1hdHVpb25cblxuQG1peGluIGFuaW1hdGlvbiAoJGRlbGF5LCAkZHVyYXRpb24sICR0aW1pbmcsICRpdGVyYXRpb24sICRhbmltYXRpb24pIHtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogJGRlbGF5O1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAkZHVyYXRpb247XG4gICAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogJGFuaW1hdGlvbjtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246ICAkdGltaW5nO1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogJGl0ZXJhdGlvbjtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzOyAvKiB0aGlzIHByZXZlbnRzIHRoZSBhbmltYXRpb24gZnJvbSByZXN0YXJ0aW5nISAqL1xuXG4gICAgLW1vei1hbmltYXRpb24tZGVsYXk6ICRkZWxheTtcbiAgICAtbW96LWFuaW1hdGlvbi1kdXJhdGlvbjogJGR1cmF0aW9uO1xuICAgIC1tb3otYW5pbWF0aW9uLW5hbWU6ICRhbmltYXRpb247XG4gICAgLW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uIDogJHRpbWluZztcbiAgICAtbW96LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6ICRpdGVyYXRpb247XG4gICAgLW1vei1hbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgLyogdGhpcyBwcmV2ZW50cyB0aGUgYW5pbWF0aW9uIGZyb20gcmVzdGFydGluZyEgKi9cblxuICAgIC1tcy1hbmltYXRpb24tZGVsYXk6ICRkZWxheTtcbiAgICAtbXMtYW5pbWF0aW9uLWR1cmF0aW9uOiAkZHVyYXRpb247XG4gICAgLW1zLWFuaW1hdGlvbi1uYW1lOiAkYW5pbWF0aW9uO1xuICAgIC1tcy1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiAgJHRpbWluZztcbiAgICAtbXMtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogJGl0ZXJhdGlvbjtcbiAgICAtbXMtYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7IC8qIHRoaXMgcHJldmVudHMgdGhlIGFuaW1hdGlvbiBmcm9tIHJlc3RhcnRpbmchICovXG5cbiAgICBhbmltYXRpb24tZGVsYXk6ICRkZWxheTtcbiAgICBhbmltYXRpb24tZHVyYXRpb246ICRkdXJhdGlvbjtcbiAgICBhbmltYXRpb24tbmFtZTogJGFuaW1hdGlvbjtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiAgJHRpbWluZztcbiAgICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAkaXRlcmF0aW9uO1xuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzOyAvKiB0aGlzIHByZXZlbnRzIHRoZSBhbmltYXRpb24gZnJvbSByZXN0YXJ0aW5nISAqL1xufVxuXG5cbi8vIHRyYW5zZm9ybSBvcmlnaW5cbkBtaXhpbiB0cmFuc2Zvcm0tb3JpZ2luICgkb3JpZ2luKSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiAkb3JpZ2luO1xuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiAkb3JpZ2luO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46ICRvcmlnaW47XG59XG5cbi8vIGJveCBzaGFkb3dcbkBtaXhpbiBib3gtc2hhZG93ICgkYm94LXNoYWRvdykge1xuICAgIGJveC1zaGFkb3c6ICRib3gtc2hhZG93O1xufVxuXG4vLyBhcHBlYXJlbmNlXG5AbWl4aW4gYXBwZWFyYW5jZSAoJGFwcGVhcmFuY2UpIHtcbiAgICAtbW96LWFwcGVhcmFuY2U6ICRhcHBlYXJhbmNlO1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogJGFwcGVhcmFuY2U7XG4gICAgLW1zLWFwcGVhcmFuY2U6ICRhcHBlYXJhbmNlO1xuICAgIGFwcGVhcmFuY2U6ICRhcHBlYXJhbmNlO1xufVxuXG4vLyBkw6lncmFkw6kgaG9yaXpvbnRhbFxuQG1peGluIGdyYWRpZW50LWhvcml6b250YWwoJHN0YXJ0LWNvbG9yLCAkZW5kLWNvbG9yLCAkc3RhcnQtcGVyY2VudCwgJGVuZC1wZXJjZW50KSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQobGVmdCwgJHN0YXJ0LWNvbG9yICRzdGFydC1wZXJjZW50LCAkZW5kLWNvbG9yICRlbmQtcGVyY2VudCk7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogLW8tbGluZWFyLWdyYWRpZW50KGxlZnQsICRzdGFydC1jb2xvciAkc3RhcnQtcGVyY2VudCwgJGVuZC1jb2xvciAkZW5kLXBlcmNlbnQpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgJHN0YXJ0LWNvbG9yICRzdGFydC1wZXJjZW50LCAkZW5kLWNvbG9yICRlbmQtcGVyY2VudCk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICAgIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyN7aWUtaGV4LXN0cigkc3RhcnQtY29sb3IpfScsIGVuZENvbG9yc3RyPScje2llLWhleC1zdHIoJGVuZC1jb2xvcil9JywgR3JhZGllbnRUeXBlPTEpOyAvLyBJRTkgYW5kIGRvd25cbn1cbi8vIGTDqWdyYWTDqSB2YXJ0aWNhbFxuQG1peGluIGdyYWRpZW50LXZlcnRpY2FsKCRzdGFydC1jb2xvciwgJGVuZC1jb2xvciwgJHN0YXJ0LXBlcmNlbnQsICRlbmQtcGVyY2VudCkge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgJHN0YXJ0LWNvbG9yICRzdGFydC1wZXJjZW50LCAkZW5kLWNvbG9yICRlbmQtcGVyY2VudCk7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogLW8tbGluZWFyLWdyYWRpZW50KHRvcCwgJHN0YXJ0LWNvbG9yICRzdGFydC1wZXJjZW50LCAkZW5kLWNvbG9yICRlbmQtcGVyY2VudCk7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgJHN0YXJ0LWNvbG9yICRzdGFydC1wZXJjZW50LCAkZW5kLWNvbG9yICRlbmQtcGVyY2VudCk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICAgIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyN7aWUtaGV4LXN0cigkc3RhcnQtY29sb3IpfScsIGVuZENvbG9yc3RyPScje2llLWhleC1zdHIoJGVuZC1jb2xvcil9JywgR3JhZGllbnRUeXBlPTApOyAvLyBJRTkgYW5kIGRvd25cbn1cblxuLy8gYXJyb3dcbkBtaXhpbiBhcnJvdygkZGlyZWN0aW9uOiB0b3AsICRzaXplOiAxMHB4LCAkY29sb3I6ICNjY2MsICRjZW50ZXI6IDUwJSwgJG1hcmdpbjogLTFweCwgJHBzZXVkbzogYmVmb3JlKXtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgLy9ib3JkZXItY29sb3I6ICRjb2xvcjtcblxuICAgICY6I3skcHNldWRvfSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAkY29sb3I7XG5cbiAgICAgICAgQGlmICRkaXJlY3Rpb24gPT0gXCJyaWdodFwiIHtcbiAgICAgICAgICAgIHRvcDogJGNlbnRlcjtcbiAgICAgICAgICAgIGxlZnQ6IDEwMCU7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogJG1hcmdpbjtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6ICRzaXplICogLTE7XG4gICAgICAgICAgICBib3JkZXItdG9wOiAkc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6ICRzaXplIHNvbGlkICRjb2xvcjtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiBpbmhlcml0O1xuICAgICAgICB9IEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gXCJib3R0b21cIiB7XG4gICAgICAgICAgICB0b3A6IDEwMCU7XG4gICAgICAgICAgICBsZWZ0OiAkY2VudGVyO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogJG1hcmdpbjtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAkc2l6ZSAqIC0xO1xuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiAkc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIGJvcmRlci10b3A6ICRzaXplIHNvbGlkICRjb2xvcjtcbiAgICAgICAgfSBAZWxzZSBpZiAkZGlyZWN0aW9uID09IFwibGVmdFwiIHtcbiAgICAgICAgICAgIHRvcDogJGNlbnRlcjtcbiAgICAgICAgICAgIHJpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAkbWFyZ2luO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogJHNpemUgKiAtMTtcbiAgICAgICAgICAgIGJvcmRlci10b3A6ICRzaXplIHNvbGlkICRjb2xvcjtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICB9IEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gXCJ0b3BcIiB7XG4gICAgICAgICAgICBib3R0b206IDEwMCU7XG4gICAgICAgICAgICBsZWZ0OiAkY2VudGVyO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogJG1hcmdpbjtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAkc2l6ZSAqIC0xO1xuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiAkc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206ICRzaXplIHNvbGlkICRjb2xvcjtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gcmdiYVxuQG1peGluIHJnYmEtb3BhY2l0eSgkY29sb3IsICRvcGFjaXR5OiAwLjMpIHtcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3I7IC8qIFRoZSBGYWxsYmFjayAqL1xuICAgIGJhY2tncm91bmQ6IHJnYmEoJGNvbG9yLCAkb3BhY2l0eSk7XG59XG5cbi8vIHBvdXIgbGVzIGhpZGUgZXQgc2hvdyBzZWxvbiBsZXMgYnJlYWtwb2ludHNcbkBtaXhpbiByZXNwb25zaXZlLXZpc2liaWxpdHkoJHBhcmVudCkge1xuICAjeyRwYXJlbnR9IHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICB9XG4gIHRhYmxlI3skcGFyZW50fSAgeyBkaXNwbGF5OiB0YWJsZSAhaW1wb3J0YW50OyB9XG4gIHRyI3skcGFyZW50fSAgICAgeyBkaXNwbGF5OiB0YWJsZS1yb3cgIWltcG9ydGFudDsgfVxuICB0aCN7JHBhcmVudH0sXG4gIHRkI3skcGFyZW50fSAgICAgeyBkaXNwbGF5OiB0YWJsZS1jZWxsICFpbXBvcnRhbnQ7IH1cbn1cblxuLy8gW2NvbnZlcnRlcl0gJHBhcmVudCBoYWNrXG5AbWl4aW4gcmVzcG9uc2l2ZS1pbnZpc2liaWxpdHkoJHBhcmVudCkge1xuICAjeyRwYXJlbnR9IHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuXG4vLyBUUk9OQ0FUVVJFUyDigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJTigJRcbi8vIHRyb25jYXR1cmUgMSBsaWduZVxuQG1peGluIHRydW5jYXRlICgkd2lkdGgtdHJ1bmNhdGUpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHdpZHRoOiAkd2lkdGgtdHJ1bmNhdGU7XG59XG5cbi8vIGhhdXRldXIgZMOpcm91bMOpZSBhdmVjIHRyYW5zaXRpb25cbkBtaXhpbiB0cmFuc2l0aW9uZWRIZWlnaHQgKCRsaW5lSGVpZ2h0LCAkbGluZUNvdW50OiAxLCAkZWFzaW5nOiBjdWJpYy1iZXppZXIoMC43NywgMCwgMC4xNzUsIDEpKSB7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbihtYXgtaGVpZ2h0IDAuMjVzICRlYXNpbmcgMHMpO1xuICAgIG1pbi1oZWlnaHQ6ICRsaW5lSGVpZ2h0ICogJGxpbmVDb3VudDtcbiAgICBtYXgtaGVpZ2h0OiAkbGluZUhlaWdodCAqICRsaW5lQ291bnQ7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgICYub3V2ZXJ0IHtcbiAgICAgICAgbWF4LWhlaWdodDogMjAwcmVtO1xuICAgICAgICAmOmJlZm9yZSxcbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyB0cm9uY2F0dXJlIG11bHRpbGlnbmUgLy9cbkBtaXhpbiBtdWx0aUxpbmVFbGxpcHNpcygkbGluZUhlaWdodDogMS42ZW0sICRsaW5lQ291bnQ6IDEsICRiZ0NvbG9yOiB3aGl0ZSl7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbmVkSGVpZ2h0KCRsaW5lSGVpZ2h0ICogJGxpbmVDb3VudCk7XG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lSGVpZ2h0O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBoeXBoZW5zOiBhdXRvO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNXJlbTtcblxuICAgICY6YmVmb3JlLFxuICAgICY6YWZ0ZXIge1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKG9wYWNpdHkgMC4yNXMgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKSAwcyk7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuICAgICY6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogJyAnO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIHdpZHRoOiAycmVtO1xuICAgICAgICBoZWlnaHQ6IDJyZW07XG4gICAgICAgIG1hcmdpbi10b3A6IDAuMnJlbTtcbiAgICAgICAgYmFja2dyb3VuZDogJGJnQ29sb3I7XG4gICAgfVxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnLi4uJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICB3aWR0aDogMnJlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNGVtO1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICB9XG59XG5cbi8vIFBlcm1ldCBkZSBzJ2Fzc3VyZXIgcXUndW4gdGV4dGUgbmUgZMOpcGFzc2UgcGFzIChjb3VwZSBzZWNoZSwgc2FucyBsZXMgXCIuLi5cIiBxdWkgb250IGJlc29pbiBkJ3VuIHRleHRlIGp1c3RpZmnDqSlcbkBtaXhpbiBtdWx0aUxpbmVUcnVuY2F0ZSgkbGluZUhlaWdodDogMS42ZW0sICRsaW5lQ291bnQ6IDEpe1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGxpbmUtaGVpZ2h0OiAkbGluZUhlaWdodDtcbiAgICBoZWlnaHQ6ICRsaW5lSGVpZ2h0ICogJGxpbmVDb3VudDtcbn1cblxuLy8gQ09MVU1OIE1PREVMIOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlFxuLy9jb2x1bW5cbkBtaXhpbiBjb2x1bW4tY291bnQoJGNvbHVtbi1jb3VudCkge1xuICAgIC1tb3otY29sdW1uLWNvdW50OiAkY29sdW1uLWNvdW50O1xuICAgIC13ZWJraXQtY29sdW1uLWNvdW50OiAkY29sdW1uLWNvdW50O1xuICAgIGNvbHVtbi1jb3VudDogJGNvbHVtbi1jb3VudDtcbn1cbi8vIGNvbHVtbl9nYXBcbkBtaXhpbiBjb2x1bW4tZ2FwKCRjb2x1bW4tZ2FwKSB7XG4gICAgLW1vei1jb2x1bW4tZ2FwOiAkY29sdW1uLWdhcDtcbiAgICAtd2Via2l0LWNvbHVtbi1nYXA6ICRjb2x1bW4tZ2FwO1xuICAgIGNvbHVtbi1nYXA6ICRjb2x1bW4tZ2FwO1xufVxuXG4vLyBGTEVYQk9YIE1PREVMIOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlOKAlFxuQG1peGluIGZsZXhEaXNwbGF5KCkge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgICBkaXNwbGF5OiBmbGV4O1xufVxuXG5AbWl4aW4gZmxleERpcmVjdGlvbigkZmxleERpcmVjdGlvbiwgJGZsZXhEaXJlY3Rpb25PbGQpIHtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6ICRmbGV4RGlyZWN0aW9uT2xkOyAvLyBob3Jpem9udGFsLCB2ZXJ0aWNhbFxuICAgIC13ZWJraXQtZmxleC1kaXJlY3Rpb246ICRmbGV4RGlyZWN0aW9uOyAvLyByb3csIGNvbHVtblxuICAgIGZsZXgtZGlyZWN0aW9uOiAkZmxleERpcmVjdGlvbjtcbn1cblxuQG1peGluIGZsZXhBbGlnbigkZmxleEFsaWduKSB7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246ICRmbGV4QWxpZ247IC8vZmxleC1zdGFydCwgZmxleC1lbmQsIGNlbnRlciwgYmFzZWxpbmUsIHN0cmV0Y2hcbiAgICAtd2Via2l0LWFsaWduLWl0ZW1zOiAkZmxleEFsaWduO1xuICAgIGFsaWduLWl0ZW1zOiAkZmxleEFsaWduO1xufVxuXG5AbWl4aW4gZmxleEp1c3RpZnkoJGZsZXhKdXN0aWZ5LCAkZmxleEp1c3RpZnlPbGQpIHtcbiAgICAtd2Via2l0LWJveC1wYWNrOiAkZmxleEp1c3RpZnlPbGQ7IC8vc3RhcnQsIGVuZCwgY2VudGVyLCBqdXN0aWZ5XG4gICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ICRmbGV4SnVzdGlmeTsgLy9mbGV4LXN0YXJ0LCBmbGV4LWVuZCwgY2VudGVyLCBzcGFjZS1iZXR3ZWVuLCBzcGFjZS1hcm91bmRcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICRmbGV4SnVzdGlmeTtcbn1cblxuQG1peGluIGZsZXhXcmFwKCRmbGV4V3JhcCkgeyAvLyBub3QgcG9zc2libGUgd2l0aCB0aGUgMjAwOSBtb2RlbCBmb3IgYW5kcm9pZCBwcmUgNC40XG4gICAgLXdlYmtpdC1mbGV4LXdyYXA6ICRmbGV4V3JhcDsgLy8gbm8td3JhcCwgd3JhcCwgd3JhcC1yZXZlcnNlXG4gICAgZmxleC13cmFwOiAkZmxleFdyYXA7XG59XG5cbkBtaXhpbiBmbGV4T3JkZXIoJGZsZXhPcmRlcikge1xuICAgIC13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXA6ICRmbGV4T3JkZXI7XG4gICAgLXdlYmtpdC1vcmRlcjogJGZsZXhPcmRlcjtcbiAgICBvcmRlcjogJGZsZXhPcmRlcjtcbn1cblxuQG1peGluIGZsZXhBbGlnblNlbGYoJGZsZXhBbGlnblNlbGYpIHtcbiAgICAtd2Via2l0LWFsaWduLXNlbGY6ICRmbGV4QWxpZ25TZWxmOyAvL2ZvciBmbGV4J3MgY2hpbGRzIDogZmxleC1zdGFydCwgZmxleC1lbmQsIGNlbnRlciwgYmFzZWxpbmUsIHN0cmV0Y2hcbiAgICBhbGlnbi1zZWxmOiAkZmxleEFsaWduU2VsZjtcbn1cblxuQG1peGluIGZsZXhGbGV4VmFsdWUoJGZsZXhGbGV4VmFsdWUpIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAkZmxleEZsZXhWYWx1ZTsgLy9mb3IgZmxleCdzIGNoaWxkcyA6IDAgPSBub3Qgc2l6ZWQsIGludGVnZXIgKDEpID0gc2l6ZWQgdG8gZmlsbCB0aGUgc3BhY2VcbiAgICAtd2Via2l0LWZsZXg6ICRmbGV4RmxleFZhbHVlO1xuICAgIGZsZXg6ICRmbGV4RmxleFZhbHVlO1xufVxuIiwiIiwiLy9hcHBlbCBkZXMgdmFyaWFibGVzIGxvY2FsZXNcbkBpbXBvcnQgJ3ZhcmlhYmxlcyc7XG5cbi5ib3R0b20tbWVudSB7XG4gICAgJi5maXhlZCAuYm90dG9tLW5hdi1tZW51LFxuXHQuYm90dG9tLW5hdi1tZW51IHtcblx0XHRtYXJnaW46IDAgMi45cmVtO1xuXG5cdFx0Lml0ZW0ge1xuXHRcdFx0PiBhIHtcblx0XHRcdFx0cGFkZGluZzogMCAyLjlyZW07XG5cdFx0XHR9XG4gICAgICAgICAgICAuYnRuLWFib25uZW1lbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDAgMnJlbTtcbiAgICAgICAgICAgIH1cblx0XHR9XG4gICAgICAgIC5zb3VzbWVudSB7XG4gICAgICAgICAgICAuY29udGFpbmVyLW9mIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cdH1cbn1cbiIsIi8vIFZhcmlhYmxlcyBsb2NhbGVzIHBvdXIgYmFycmUtYm90dG9tXG5cbiRiZ2QtYm90dG9tLW1lbnU6ICRjb3VsZXVyLXNlY29uZGFpcmU7XG4kYmdkLWJvdHRvbS1zb3VzLW1lbnU6ICRncmlzLXRyZXMtY2xhaXI7XG4kaGF1dGV1ci1iYXJyZS1ib3R0b206IDQuNHJlbTtcbiRoYXV0ZXVyLWJvdXRvbi1wcmVtaXVtOiAyLjhyZW07Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBRWlLb0MsV0FBVztBQUNYLFdBQVc7QUFDWCxXQUFXO0FBQ1gsWUFBWTtBQUVQLFdBQVc7QUFDWCxXQUFXO0FBQ1gsV0FBVztBQUNYLFlBQVk7QUd0S3JELEFBQ0ksWUFEUSxBQUNQLE1BQU0sQ0FBQyxnQkFBZ0I7QUFENUIsWUFBWSxDQUVYLGdCQUFnQixDQUFDO0VBQ2hCLE1BQU0sRUFBRSxRQUFRLEdBZWhCO0VBbEJGLEFBTUcsWUFOUyxBQUNQLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FJMUIsS0FBSyxHQUNGLENBQUM7RUFOTixZQUFZLENBRVgsZ0JBQWdCLENBR2YsS0FBSyxHQUNGLENBQUMsQ0FBQztJQUNILE9BQU8sRUFBRSxRQUFRLEdBQ2pCO0VBUkosQUFTWSxZQVRBLEFBQ1AsTUFBTSxDQUFDLGdCQUFnQixDQUkxQixLQUFLLENBSUssZUFBZTtFQVQzQixZQUFZLENBRVgsZ0JBQWdCLENBR2YsS0FBSyxDQUlLLGVBQWUsQ0FBQztJQUNaLE9BQU8sRUFBRSxNQUFNLEdBQ2xCO0VBWGIsQUFjWSxZQWRBLEFBQ1AsTUFBTSxDQUFDLGdCQUFnQixDQVlwQixTQUFTLENBQ0wsYUFBYTtFQWR6QixZQUFZLENBRVgsZ0JBQWdCLENBV1QsU0FBUyxDQUNMLGFBQWEsQ0FBQztJQUNWLFlBQVksRUFBRSxLQUFLLEdBQ3RCIn0= */
