variables:
  CDP_IMAGE: ouestfrance/cdp:latest
  NODE_IMAGE: matthieupresse/php7-node10:latest # CF ./utils/Dockerfile-build-cdp

stages:
  - build
  - package
  - deploy

build:
  image: $NODE_IMAGE
  stage: build
  script:
    - yarn install
    - npx gulp html
    - npm run build-storybook
  artifacts:
    paths:
      - dist
    expire_in: 1day
  only:
    - branches
  tags:
    - int

checknpublish:
  image: $NODE_IMAGE
  stage: build
  before_script:
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)
    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - echo ${NPM_TOKEN}
    - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ./.npmrc
    - npm run checknpublish
  only:
    - branches
  tags:
    - int

package_review:
  image: $CDP_IMAGE
  stage: package
  script:
    - cdp docker --image-tag-branch-name --use-gitlab-registry
  dependencies:
    - build
  only:
    - branches
  except:
    - master
    - develop
  tags:
    - int

package_staging:
  image: $CDP_IMAGE
  stage: package
  script:
    - cdp docker --image-tag-branch-name --use-aws-ecr
  dependencies:
    - build
  only:
    - master
    - develop
  tags:
    - int

deploy_review:
  image: $CDP_IMAGE
  stage: deploy
  script:
    - cdp k8s --internal-port=80 --use-gitlab-registry --namespace-project-branch-name --image-tag-branch-name --delete-labels=120 --create-default-helm
  environment:
    name: review/$CI_COMMIT_REF_NAME
  only:
    - branches
  except:
    - master
    - develop
  tags:
    - int

deploy_staging:
  image: $CDP_IMAGE
  stage: deploy
  script:
    - cdp k8s --internal-port=80 --use-aws-ecr --namespace-project-name --image-tag-branch-name --create-default-helm
  environment:
    name: review/$CI_COMMIT_REF_NAME
  only:
    - develop
  tags:
    - staging

deploy_prod:
  image: $CDP_IMAGE
  stage: deploy
  script:
    - cdp k8s --internal-port=80 --use-aws-ecr --namespace-project-name --image-tag-branch-name --create-default-helm
  environment:
    name: review/$CI_COMMIT_REF_NAME
  only:
    - master
  tags:
    - prod

